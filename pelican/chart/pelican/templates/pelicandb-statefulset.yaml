apiVersion: apps/v1
kind: StatefulSet
metadata:
  name:  {{ .Release.Name }}-db
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/component: pelican-db
spec:
  serviceName: {{ .Release.Name }}-db-service
  replicas: {{ .Values.pelicandb.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/component: pelican-db
  template:
    metadata:
      labels:
        app.kubernetes.io/component: pelican-db
    spec:
      containers:
      - name: pelican-db
        image: "{{ .Values.pelicandb.image.repo }}:{{ .Values.pelicandb.image.tag }}"
        imagePullPolicy: Always
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: {{ .Release.Name }}-pelicandb-secret
        ports:
        - name: mysql
          containerPort: {{ .Values.pelicandb.port }}
        volumeMounts:
        - name: pelican-db-config 
          mountPath: /docker-entrypoint-initdb.d/pelican_db_init.sh
          subPath: pelican_db_init.sh
        - name: mysql-data
          mountPath: /var/lib/mysql
        livenessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - localhost
          initialDelaySeconds: {{ .Values.pelicandb.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.pelicandb.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.pelicandb.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.pelicandb.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.pelicandb.livenessProbe.failureThreshold }}
        readinessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - localhost
          initialDelaySeconds: {{ .Values.pelicandb.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.pelicandb.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.pelicandb.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.pelicandb.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.pelicandb.readinessProbe.failureThreshold }}
      restartPolicy: Always    
      volumes:
      - name: pelican-db-config
        configMap:
          name: {{ .Release.Name }}-pelican-db-config
          defaultMode: 420
      - name: mysql-data
        emptyDir: {}    
